---
title: "Plotting Rivers and Points"
author: "Darren Shoemaker"
format: html
toc: true
embed-resources: true
editor: visual
---

This document describes using the terra, sf, and ggplot2 family to plot points to a shapefile or other type of spatial data. Representing spatial data on a map is a common way to prepare information for a presentation, manuscript, or course paper.

## Libraries

```{r}
#| output: false
library(tidyverse)
library(here)
library(sf)
library(terra)
library(ggplot2)
library(ggspatial)
```

## Read Data and Data Cleaning

For this example we will use a shapefile of river networks across the United States^1^ and a .csv of United States reservoirs^2^ with surface area greater than 100 hectares. Remember we use the here package to ensure these scripts can run on anyone's computer. We use the read_sf function from the sf package to load our shapefile as simple features object. This is a dataframe with a special geometry column which can used for spatial analyses.

```{r}
#| output: false

# River Shapefile

shp <- sf::read_sf(here('data/raw/rs16my07', 'rs16my07.shp')) %>% 
  dplyr::filter(HUC4 == 316)

# Reservoirs

dat <- read.csv(here('data/raw', 'res.csv'))

# State Lines

state <- map_data('state')

# Data Cleaning

head(dat)
```

## ggplot

We use the ggplot2 and ggspatial libraries to let us plot both an sf object and simple point object. If you are unfamiliar with ggplot, I recommend looking into an introduction or cheat sheet online. This a very powerful package which you will likely return to many times during your time at MSU. The most important thing to note is the use of the + sign to add elements to the plot. Once you understand the + syntax, the package is really intuitive. We begin by adding the first geom with geom_polygon, we then add the geom_sf with our rivers, and finally the reservoirs with geom_point.

```{r}
res_map <- ggplot() +
  geom_polygon(data = state, aes(x = long, y = lat, group = group), 
               fill = 'white', color = 'black') +
  geom_sf(data = shp) +
  geom_point(data = dat, aes(x = Longitude, y = Latitude), 
             size = 0.3, color = 'red') +
  xlab("Longitude") +
  ylab("Latitude")
res_map
```

And you have a pretty map! Remember that almost everything in a ggplot can be customized, so play around! Add different colors, shapes, and labels until you have exactly the plot you want.

## References

1.  <https://www.weather.gov/gis/Rivers>

```{=html}
<!-- -->
```
2.  Rodgers, K.D., 2017, A Reservoir Morphology Database for the
    Conterminous United States: U.S. Geological Survey data release,
    https://doi.org/10.5066/F7GF0RQZ
